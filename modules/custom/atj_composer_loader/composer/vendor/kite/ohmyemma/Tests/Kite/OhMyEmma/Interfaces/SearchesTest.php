<?php
namespace Kite\OhMyEmma\Interfaces;

use mocks\RequestMock as RequestMock;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-03-24 at 21:31:39.
 */
class SearchesTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Searches
     */
    protected $request;
    protected $searches;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->request = new RequestMock();
        $this->assertEquals('', $this->request->baseURL);

        $this->searches = new Searches($this->request);
        $this->assertObjectHasAttribute('_request', $this->searches);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Kite\OhMyEmma\Interfaces\Searches::getSearches
     */
    public function testGetSearches()
    {
        $this->request = new RequestMock();
        $this->searches = new Searches($this->request);

        // Testing get searches with no filters
        $this->assertEquals(
            '/searches',
            $this->searches->getSearches()
        );
        // Testing get specific search by id
        $this->assertEquals(
            '/searches/searchId',
            $this->searches->getSearches('searchId')
        );
        // Testing get specific search by id and return members
        $this->assertEquals(
            '/searches/searchId/members',
            $this->searches->getSearches('searchId', true)
        );
        // Testing get specific search by id and return members including deleting
        $this->assertEquals(
            '/searches/searchId/members?deleted=true',
            $this->searches->getSearches('searchId', true, true)
        );
    }

    /**
     * @covers Kite\OhMyEmma\Interfaces\Searches::addUpdateSearch
     */
    public function testAddUpdateSearch()
    {
        $this->request = new RequestMock();
        $this->searches = new Searches($this->request);

        $searchData = array(
            "search" => "data"
        );
        // Testing adding a new search
        $this->assertEquals(
            '/searches?search=data',
            $this->searches->addUpdateSearch($searchData)
        );
        // Testing updating search
        $this->assertEquals(
            '/searches/searchId?search=data',
            $this->searches->addUpdateSearch($searchData, 'searchId')
        );
    }

    /**
     * @covers Kite\OhMyEmma\Interfaces\Searches::removeSearch
     * @todo   Implement testRemoveSearch().
     */
    public function testRemoveSearch()
    {
        $this->request = new RequestMock();
        $this->searches = new Searches($this->request);

        // Testing adding a new search
        $this->assertEquals(
            '/searches/searchId',
            $this->searches->removeSearch('searchId')
        );
    }
}
