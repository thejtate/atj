<?php
namespace Kite\OhMyEmma\Interfaces;

use mocks\RequestMock as RequestMock;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-03-24 at 21:31:19.
 */
class ResponsesTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Responses
     */
    protected $responses;
    protected $request;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->request = new RequestMock();
        $this->assertEquals('', $this->request->baseURL);

        $this->responses = new Responses($this->request);
        $this->assertObjectHasAttribute('_request', $this->responses);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Kite\OhMyEmma\Interfaces\Responses::getResponses
     * @todo   Implement testGetResponses().
     */
    public function testGetResponses()
    {
        $this->request = new RequestMock();
        $this->responses = new Responses($this->request);

        $filterData = array(
            "filter1" => "a",
            "filter2" => "b"
        );
        // Testing get responses with no filters
        $this->assertEquals(
            '/response',
            $this->responses->getResponses()
        );
        // Testing get responses with filters
        $this->assertEquals(
            '/response?filter1=a&filter2=b', 
            $this->responses->getResponses($filterData)
        );
    }

    /**
     * @covers Kite\OhMyEmma\Interfaces\Responses::getResponseDetails
     */
    public function testGetResponseDetails()
    {
        $this->request = new RequestMock();
        $this->responses = new Responses($this->request);

        // Testing get response details with no subinformation
        $this->assertEquals(
            '/response/mailingId',
            $this->responses->getResponseDetails('mailingId')
        );
        // Testing get response details with subinformation sends
        $this->assertEquals(
            '/response/mailingId/sends',
            $this->responses->getResponseDetails('mailingId', 'sends')
        );
        // Testing get response details with subinformation in_progress
        $this->assertEquals(
            '/response/mailingId/in_progress',
            $this->responses->getResponseDetails('mailingId', 'in_progress')
        );
        // Testing get response details with subinformation deliveries
        $this->assertEquals(
            '/response/mailingId/deliveries',
            $this->responses->getResponseDetails('mailingId', 'deliveries')
        );
        // Testing get response details with subinformation opens
        $this->assertEquals(
            '/response/mailingId/opens',
            $this->responses->getResponseDetails('mailingId', 'opens')
        );
        // Testing get response details with subinformation links
        $this->assertEquals(
            '/response/mailingId/links',
            $this->responses->getResponseDetails('mailingId', 'links')
        );
        // Testing get response details with subinformation clicks
        $this->assertEquals(
            '/response/mailingId/clicks',
            $this->responses->getResponseDetails('mailingId', 'clicks')
        );
        // Testing get response details with subinformation forwards
        $this->assertEquals(
            '/response/mailingId/forwards',
            $this->responses->getResponseDetails('mailingId', 'forwards')
        );
        // Testing get response details with subinformation outputs
        $this->assertEquals(
            '/response/mailingId/outputs',
            $this->responses->getResponseDetails('mailingId', 'outputs')
        );
        // Testing get response details with subinformation singups
        $this->assertEquals(
            '/response/mailingId/signups',
            $this->responses->getResponseDetails('mailingId', 'signups')
        );
        // Testing get response details with subinformation customer_share
        $this->assertEquals(
            '/response/mailingId/customer_share',
            $this->responses->getResponseDetails('mailingId', 'customer_share')
        );
        // Testing get response details with subinformation customer_shares_clicks
        $this->assertEquals(
            '/response/mailingId/customer_shares_clicks',
            $this->responses->getResponseDetails('mailingId', 'customer_shares_clicks')
        );
        // Testing get response details with subinformation customer_share
        $this->assertEquals(
            '/response/mailingId/customer_share',
            $this->responses->getResponseDetails('mailingId', 'customer_share')
        );
        // Testing get response details with subinformation shares/overview
        $this->assertEquals(
            '/response/mailingId/shares/overview',
            $this->responses->getResponseDetails('mailingId', 'shares/overview')
        );
    }
}
